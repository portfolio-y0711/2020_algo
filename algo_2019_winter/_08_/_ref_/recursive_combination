const combination = (nums: number[]) => {
  let flags = new Array<boolean>(nums.length);
  let comb = new Array<Array<string>>();
  let minimal = new Set();

  const recur = r => {
    if (r == 0) {
      comb.push(
        nums
          .map((num, idx) => {
            if (flags[idx]) return num.toString();
            else return null;
          })
          .filter(x => x)
      );
      comb = comb.filter(x => x.some(y => y != null));
      return;
    }
    flags[r] = true;
    recur(r - 1);

    flags[r] = false;
    recur(r);
  };
  recur(0);
  return comb;
};

//console.log(combination([10, 20, 30]));

//console.log(combination([10, 20, 30]).sort((n1, n2) => n1.length - n2.length));
